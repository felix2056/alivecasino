(function () {

	// this function is for Abbreviation of numbers
	// 1 000  to be K
	// 1 000 000 (million) to be M
	// 1 000 000 000 (billion) to be B
	// 1 000 000 000 000 (trillion) to be T
	function abbrevNumberWrapper(value) {
		var values = value.split('-');
		var abbrevedNum = abbrevNumber(values[0]) + abbrevNumber(values[1]);
		return abbrevNumber(values[0]) + ' - ' + abbrevNumber(values[1]);
	}
	function abbrevNumber(num) {

		var fixed = 1;
		var num;
		if (num == " âˆž") {
			return num;
		}
		
		if (num === null) { return null; } // terminate early
		if (num === 0) { return '0'; } // terminate early

		num = parseFloat(num);
		if (num < 999999) {
			return num;
		}
		fixed = (!fixed || fixed < 0) ? 0 : fixed; // number of decimal places to show
		var b = num.toPrecision(2).split("e"), // get power
			k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 14) / 3), // floor at decimals, ceiling at trillions
			c = k < 1 ? num.toFixed(0 + fixed) : (num / Math.pow(10, k * 3)).toFixed(1 + fixed), // divide by power
			d = c < 0 ? c : Math.abs(c), // enforce -0 is 0
			e = d + ['', 'K', 'M', 'B', 'T'][k]; // append power
		return e;
	};

	function ChangePercent() {
		this.i = 0;
		this.percent;
		this.circles;
		this.loopTime = 200;
		this.data;
		this.params = [];
		//this.init();
	}

	ChangePercent.prototype.fill = function (i) {
		$(this.circles[i]).find('span').html(this.percent[i].percent + '%');
		$(this.circles[i]).attr('class', 'c100 small p' + this.percent[i].percent + ' center');
	}

	ChangePercent.prototype.loop = function () {
		if (this.i < this.circles.length) {
			this.fill(this.i);
			this.i++;
			setTimeout(this.loop.bind(this), this.loopTime);
		}
	}

	ChangePercent.prototype.init = function (data) {
		//this.data = data;
		//this.wrightHtml(params);
		this.percent = data;
		this.addDom(data);
		this.circles = $('.percentCircle .c100');
		this.circles.attr('class', 'c100 small p0 center');
		this.i = 0;
		setTimeout(this.loop.bind(this), this.loopTime);
	}

	ChangePercent.prototype.addDom = function (data) {

		var html = '<div class="secondContProducts row defGrid"> \
						<div class="verticalLine"></div> \
						<div class="currency1"></div> \
			            <div class="verticalLine"></div> \
			            <div class="productsPersentsArea"> \
			            	<div class="percentsBlocks">';

		for (var i = 0, l = data.length; i < l; i++) {
			html += '<div class="percentBlock" ng-repeat="row in choosedCommission"> \
	                    <div class="horizontalLine clear"> \
	                        <div class="line"></div> \
	                        <div class="line"></div> \
	                    </div> \
						<div class="verticalLine"></div> \
	                    <div class="percentCircle"> \
	                        <div class="c100 small p0 center"> \
	                            <span>0%</span> \
	                            <div class="slice"> \
	                                <div class="bar"></div> \
	                                <div class="fill"></div> \
	                            </div> \
	                        </div> \
	                    </div> \
	                    <div class="productName">' + abbrevNumberWrapper(data[i].label) + ' </div> \
	                </div>';

		}

		html += '		</div> \
					</div> \
				 </div>';


		$('#percentsArea').html(html);

	}

	window.percentCircle = new ChangePercent;
})();


